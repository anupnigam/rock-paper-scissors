# This is a basic workflow to help you get started with Actions
name: Github Actions Java Maven Example
# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the master branch
  pull_request:
    branches: [ master ]
  push:
    branches: [master]

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
       contents: read
       packages: write
       

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step1- Checkout master branch from GitHub  
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step2- Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          
      - name: Step3-  To check if stated version in Step2 has been installed or not .
        run: java -version
        

      - name: Step3- have github actions Build Maven Project
        run: |
         mvn -B package --file pom.xml
         mkdir staging && cp target/*.jar staging
      

      -  name: Step4- List the current directory
         run: ls

      - name: Step5 - List the files present in target folder
        run: |
         cd target
         ls -a
         
      - name:  Step6- Persist workflow data as artifacts
        uses: actions/upload-artifact@v2
        with:
           name: github-actions-artifact
           path: staging
       
      - name: Step7 -Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v2
        with:
           java-version: 11
           distribution: 'adopt'
           
      - name: Step8- Publish Package
        run: mvn --batch-mode deploy
        env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
